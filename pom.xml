<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>operalot</groupId>
    <artifactId>operalot.validator</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>Operalot Validator</name>
    <url>http://maven.apache.org</url>

    <properties>
        <jstl.version>1.2</jstl.version>
        <javax.servlet.version>2.5</javax.servlet.version>
        <jsp-api.version>2.1</jsp-api.version>
        <el-api.version>1.0</el-api.version>
        <org.slf4j.version>1.7.5</org.slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <junit.version>4.11</junit.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-lang3.version>3.1</commons-lang3.version>
        <commons-validator.version>1.4.0</commons-validator.version>
        <commons-collections.version>3.2.1</commons-collections.version>
        <commons-codec.version>1.8</commons-codec.version>
        <easymock.version>3.2</easymock.version>
        <com.h2database.version>1.3.172</com.h2database.version>
        <org.openid4java.version>0.9.6</org.openid4java.version>
        <jackson.version>2.1.5</jackson.version>
        <joda-time-version>2.2</joda-time-version>
        <json.version>20090211</json.version>

        <httpclient.version>4.2.5</httpclient.version>
        <httpcore.version>4.2.4</httpcore.version>

        <recaptcha4j.version>0.0.7</recaptcha4j.version>
        <apacheds.version>1.5.5</apacheds.version>
        <javax.mail.version>1.4.7</javax.mail.version>
        <javax.activation.version>1.1.1</javax.activation.version>

        <!-- Force maven-filesync-plugin rewrite the Eclipse FileSync plugin configuration with
         $mvn filesync:generate -Dmaven.filesync.override=true -->
        <maven.filesync.override>false</maven.filesync.override>

        <!-- default empty javaagent
        if needed you can specify it on the command line with -Djavaagent="..." -->
        <javaagent/>
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
        <java-version>1.7</java-version>
        <org.aspectj-version>1.7.4</org.aspectj-version>
        <org.slf4j-version>1.7.5</org.slf4j-version>
        <ch.qos.logback-version>1.0.13</ch.qos.logback-version>
        <org.thymeleaf-version>2.1.2.RELEASE</org.thymeleaf-version>
        <org.thymeleaf.extras.springsecurity3-version>2.1.1.RELEASE</org.thymeleaf.extras.springsecurity3-version>

    </properties>

    <!-- Global management of all dependencies -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>operalot</groupId>
                <artifactId>operalot.validator.persistence</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>operalot</groupId>
                <artifactId>operalot.validator.api</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>operalot</groupId>
                <artifactId>operalot.validator.web</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>operalot</groupId>
                <artifactId>operalot.validator.impl</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>4.0.3.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>3.2.3.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>



        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.5</version>
            <scope>test</scope>
        </dependency>

        <!-- Global dependencies (provided or test scope only) -->
        <!-- Servlet spec -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>el-api</artifactId>
            <version>${el-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Exclude commons-logging by adding it as a provided dependency -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${easymock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <finalName>operalot-validator</finalName>
        <defaultGoal>install</defaultGoal>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <!-- upgrade to 3.0 triggers JDK 6 bug when executing mvn install cobertura:cobertura -->
                    <version>2.3.2</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>


            </plugins>
        </pluginManagement>
        <!-- execute the maven source plugin as part of the verify phase -->
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <modules>
        <module>operalot-validator-persistence</module>
        <module>operalot-validator-api</module>
        <module>operalot-validator-impl</module>
        <module>operalot-validator-util</module>
        <module>operalot-validator-web</module>
    </modules>
</project>
